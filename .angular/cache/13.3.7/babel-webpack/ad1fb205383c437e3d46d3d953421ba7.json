{"ast":null,"code":"import { Directive, EventEmitter, HostListener, Input, Output, Injectable, Component, ViewChild, NgModule } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { __awaiter } from 'tslib';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/common';\nconst _c0 = [\"input\"];\n\nconst _c1 = function (a0) {\n  return {\n    \"img-ul-disabled\": a0\n  };\n};\n\nfunction ImageUploadComponent_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"label\", 7);\n    ɵngcc0.ɵɵelement(1, \"span\", 8);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 9, 10);\n    ɵngcc0.ɵɵlistener(\"change\", function ImageUploadComponent_label_2_Template_input_change_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n\n      const _r4 = ɵngcc0.ɵɵreference(3);\n\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onFileChange(_r4.files);\n    });\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.style == null ? null : ctx_r0.style.selectButton)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c1, ctx_r0.disabled));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerText\", ctx_r0.buttonCaption);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r0.disabled)(\"accept\", ctx_r0.supportedExtensions);\n  }\n}\n\nfunction ImageUploadComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function ImageUploadComponent_button_3_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.deleteAll();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r1.disabled)(\"ngStyle\", ctx_r1.style == null ? null : ctx_r1.style.clearButton)(\"innerText\", ctx_r1.clearButtonCaption);\n  }\n}\n\nfunction ImageUploadComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"p\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerText\", ctx_r2.fileTooLargeMessage);\n  }\n}\n\nfunction ImageUploadComponent_div_6_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵelement(1, \"div\", 19);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction ImageUploadComponent_div_6_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵlistener(\"click\", function ImageUploadComponent_div_6_div_1_div_2_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      const file_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r13.deleteFile(file_r10);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 21);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(1, _c1, ctx_r12.disabled));\n  }\n}\n\nconst _c2 = function (a0) {\n  return {\n    \"background-image\": a0\n  };\n};\n\nfunction ImageUploadComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function ImageUploadComponent_div_6_div_1_Template_div_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r17);\n      const file_r10 = restoredCtx.$implicit;\n      const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r16.previewFileClicked(file_r10);\n    });\n    ɵngcc0.ɵɵtemplate(1, ImageUploadComponent_div_6_div_1_div_1_Template, 2, 0, \"div\", 16);\n    ɵngcc0.ɵɵtemplate(2, ImageUploadComponent_div_6_div_1_div_2_Template, 2, 3, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r10 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(3, _c2, \"url(\" + file_r10.src + \")\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", file_r10.pending);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !file_r10.pending);\n  }\n}\n\nfunction ImageUploadComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵtemplate(1, ImageUploadComponent_div_6_div_1_Template, 3, 5, \"div\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r3.style == null ? null : ctx_r3.style.previewPanel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.files);\n  }\n}\n\nconst _c3 = function (a0) {\n  return {\n    \"img-ul-file-is-over\": a0\n  };\n};\n\nlet FileDropDirective = /*#__PURE__*/(() => {\n  class FileDropDirective {\n    constructor() {\n      this.fileOver = new EventEmitter();\n      this.fileDrop = new EventEmitter();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n\n    static getDataTransfer(event) {\n      return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer;\n    }\n    /**\n     * @param {?} types\n     * @return {?}\n     */\n\n\n    static hasFiles(types) {\n      if (!types) {\n        return false;\n      }\n\n      if (types.indexOf) {\n        return types.indexOf('Files') !== -1;\n      }\n\n      if (types.contains) {\n        return types.contains('Files');\n      }\n\n      return false;\n    }\n    /**\n     * @param {?} rule\n     * @param {?} candidate\n     * @return {?}\n     */\n\n\n    static matchRule(rule, candidate) {\n      return new RegExp('^' + rule.split('*').join('.*') + '$').test(candidate);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n\n    onDrop(event) {\n      /** @type {?} */\n      const dataTransfer = FileDropDirective.getDataTransfer(event);\n\n      if (!FileDropDirective.hasFiles(dataTransfer.types)) {\n        return;\n      }\n\n      event.preventDefault();\n      /** @type {?} */\n\n      const files = this.filterFiles(dataTransfer.files);\n      event.preventDefault();\n      this.fileOver.emit(false);\n      this.fileDrop.emit(files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n\n    onDragLeave(event) {\n      this.fileOver.emit(false);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n\n    onDragOver(event) {\n      /** @type {?} */\n      const dataTransfer = FileDropDirective.getDataTransfer(event);\n\n      if (!FileDropDirective.hasFiles(dataTransfer.types)) {\n        return;\n      }\n\n      dataTransfer.dropEffect = 'copy';\n      event.preventDefault();\n      this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n\n\n    filterFiles(files) {\n      if (!this.accept || this.accept.length === 0) {\n        return files;\n      }\n      /** @type {?} */\n\n\n      const acceptedFiles = [];\n\n      for (let i = 0; i < files.length; i++) {\n        for (let j = 0; j < this.accept.length; j++) {\n          if (FileDropDirective.matchRule(this.accept[j], files[i].type)) {\n            acceptedFiles.push(files[i]);\n            break;\n          }\n        }\n      }\n\n      return acceptedFiles;\n    }\n\n  }\n\n  FileDropDirective.ɵfac = function FileDropDirective_Factory(t) {\n    return new (t || FileDropDirective)();\n  };\n\n  FileDropDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FileDropDirective,\n    selectors: [[\"\", \"fileDrop\", \"\"]],\n    hostBindings: function FileDropDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) {\n          return ctx.onDrop($event);\n        })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) {\n          return ctx.onDragLeave($event);\n        })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) {\n          return ctx.onDragOver($event);\n        });\n      }\n    },\n    inputs: {\n      accept: \"accept\"\n    },\n    outputs: {\n      fileOver: \"fileOver\",\n      fileDrop: \"fileDrop\"\n    }\n  });\n  return FileDropDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nlet ImageUploadService = /*#__PURE__*/(() => {\n  class ImageUploadService {\n    /**\n     * @param {?} http\n     */\n    constructor(http) {\n      this.http = http;\n    }\n    /**\n     * @param {?} url\n     * @param {?} image\n     * @param {?=} headers\n     * @param {?=} partName\n     * @param {?=} customFormData\n     * @param {?=} withCredentials\n     * @return {?}\n     */\n\n\n    uploadImage(url, image, headers, partName = 'image', customFormData, withCredentials) {\n      if (!url || url === '') {\n        throw new Error('Url is not set! Please set it before doing queries');\n      }\n      /** @type {?} */\n\n\n      const formData = new FormData();\n\n      if (customFormData) {\n        for (const key of Object.keys(customFormData)) {\n          formData.append(key, customFormData[key]);\n        }\n      }\n\n      formData.append(partName, image);\n      return this.http.post(url, formData, {\n        withCredentials,\n        headers,\n        observe: 'response'\n      });\n    }\n\n  }\n\n  ImageUploadService.ɵfac = function ImageUploadService_Factory(t) {\n    return new (t || ImageUploadService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient));\n  };\n\n  ImageUploadService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ImageUploadService,\n    factory: ImageUploadService.ɵfac\n  });\n  /** @nocollapse */\n\n  return ImageUploadService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nclass FileHolder {\n  /**\n   * @param {?} src\n   * @param {?} file\n   */\n  constructor(src, file) {\n    this.src = src;\n    this.file = file;\n    this.pending = false;\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nlet ImageUploadComponent = /*#__PURE__*/(() => {\n  class ImageUploadComponent {\n    /**\n     * @param {?} imageService\n     */\n    constructor(imageService) {\n      this.imageService = imageService;\n      this.files = [];\n      this.fileCounter = 0;\n      this.fileOver = false;\n      this.showFileTooLargeMessage = false;\n\n      this.beforeUpload = metadata => metadata;\n\n      this.buttonCaption = 'Select Images';\n      this.disabled = false;\n      this.cssClass = 'img-ul';\n      this.clearButtonCaption = 'Clear';\n      this.dropBoxMessage = 'Drop your images here!';\n      this.max = 100;\n      this.preview = true;\n      this.withCredentials = false;\n      this.uploadedFiles = [];\n      this.removed = new EventEmitter();\n      this.uploadStateChanged = new EventEmitter();\n      this.uploadFinished = new EventEmitter();\n      this.previewClicked = new EventEmitter();\n      this.pendingFilesCounter = 0;\n\n      this.onFileOver = isOver => this.fileOver = isOver;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnInit() {\n      if (!this.fileTooLargeMessage) {\n        this.fileTooLargeMessage = 'An image was too large and was not uploaded.' + (this.maxFileSize ? ' The maximum file size is ' + this.maxFileSize / 1024 + 'KiB.' : '');\n      }\n\n      this.supportedExtensions = this.supportedExtensions ? this.supportedExtensions.map(ext => 'image/' + ext) : ['image/*'];\n    }\n    /**\n     * @return {?}\n     */\n\n\n    deleteAll() {\n      this.files.forEach(f => this.removed.emit(f));\n      this.files = [];\n      this.fileCounter = 0;\n\n      if (this.inputElement) {\n        this.inputElement.nativeElement.value = '';\n      }\n    }\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n\n\n    deleteFile(file) {\n      /** @type {?} */\n      const index = this.files.indexOf(file);\n      this.files.splice(index, 1);\n      this.fileCounter--;\n\n      if (this.inputElement) {\n        this.inputElement.nativeElement.value = '';\n      }\n\n      this.removed.emit(file);\n    }\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n\n\n    previewFileClicked(file) {\n      this.previewClicked.emit(file);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      if (changes.uploadedFiles && changes.uploadedFiles.currentValue.length > 0) {\n        this.processUploadedFiles();\n      }\n    }\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n\n\n    onFileChange(files) {\n      if (this.disabled) return;\n      /** @type {?} */\n\n      const remainingSlots = this.max - this.fileCounter;\n      /** @type {?} */\n\n      const filesToUploadNum = files.length > remainingSlots ? remainingSlots : files.length;\n\n      if (this.url && filesToUploadNum !== 0) {\n        this.uploadStateChanged.emit(true);\n      }\n\n      this.fileCounter += filesToUploadNum;\n      this.showFileTooLargeMessage = false;\n      this.uploadFiles(files, filesToUploadNum);\n    }\n    /**\n     * @param {?} response\n     * @param {?} fileHolder\n     * @return {?}\n     */\n\n\n    onResponse(response, fileHolder) {\n      fileHolder.serverResponse = {\n        status: response.status,\n        response\n      };\n      fileHolder.pending = false;\n      this.uploadFinished.emit(fileHolder);\n\n      if (--this.pendingFilesCounter === 0) {\n        this.uploadStateChanged.emit(false);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    processUploadedFiles() {\n      for (let i = 0; i < this.uploadedFiles.length; i++) {\n        /** @type {?} */\n        const data = this.uploadedFiles[i];\n        /** @type {?} */\n\n        let fileBlob;\n        /** @type {?} */\n\n        let file;\n        /** @type {?} */\n\n        let fileUrl;\n\n        if (data instanceof Object) {\n          fileUrl = data.url;\n          fileBlob = data.blob ? data.blob : new Blob([data]);\n          file = new File([fileBlob], data.fileName);\n        } else {\n          fileUrl = data;\n          fileBlob = new Blob([fileUrl]);\n          file = new File([fileBlob], fileUrl);\n        }\n\n        this.files.push(new FileHolder(fileUrl, file));\n      }\n    }\n    /**\n     * @param {?} files\n     * @param {?} filesToUploadNum\n     * @return {?}\n     */\n\n\n    uploadFiles(files, filesToUploadNum) {\n      return __awaiter(this, void 0, void 0, function* () {\n        for (let i = 0; i < filesToUploadNum; i++) {\n          /** @type {?} */\n          const file = files[i];\n\n          if (this.maxFileSize && file.size > this.maxFileSize) {\n            this.fileCounter--;\n            this.inputElement.nativeElement.value = '';\n            this.showFileTooLargeMessage = true;\n            this.uploadStateChanged.emit(false);\n            continue;\n          }\n          /** @type {?} */\n\n\n          const beforeUploadResult = yield this.beforeUpload({\n            file,\n            url: this.url,\n            abort: false\n          });\n\n          if (beforeUploadResult.abort) {\n            this.fileCounter--;\n            this.inputElement.nativeElement.value = '';\n            continue;\n          }\n          /** @type {?} */\n\n\n          const img =\n          /** @type {?} */\n          document.createElement('img');\n          img.src = window.URL.createObjectURL(beforeUploadResult.file);\n          /** @type {?} */\n\n          const reader = new FileReader();\n          reader.addEventListener('load', event => {\n            /** @type {?} */\n            const fileHolder = new FileHolder(event.target.result, beforeUploadResult.file);\n            this.files.push(fileHolder);\n            this.uploadSingleFile(fileHolder, beforeUploadResult.url, beforeUploadResult.formData);\n          }, false);\n          reader.readAsDataURL(beforeUploadResult.file);\n        }\n      });\n    }\n    /**\n     * @param {?} fileHolder\n     * @param {?=} url\n     * @param {?=} customForm\n     * @return {?}\n     */\n\n\n    uploadSingleFile(fileHolder, url = this.url, customForm) {\n      if (url) {\n        this.pendingFilesCounter++;\n        fileHolder.pending = true;\n        this.imageService.uploadImage(url, fileHolder.file, this.headers, this.partName, customForm, this.withCredentials).subscribe(response => this.onResponse(response, fileHolder), error => {\n          this.onResponse(error, fileHolder);\n          this.deleteFile(fileHolder);\n        });\n      } else {\n        this.uploadFinished.emit(fileHolder);\n      }\n    }\n\n  }\n\n  ImageUploadComponent.ɵfac = function ImageUploadComponent_Factory(t) {\n    return new (t || ImageUploadComponent)(ɵngcc0.ɵɵdirectiveInject(ImageUploadService));\n  };\n\n  ImageUploadComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ImageUploadComponent,\n    selectors: [[\"image-upload\"]],\n    viewQuery: function ImageUploadComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);\n      }\n    },\n    inputs: {\n      beforeUpload: \"beforeUpload\",\n      buttonCaption: \"buttonCaption\",\n      disabled: \"disabled\",\n      cssClass: [\"class\", \"cssClass\"],\n      clearButtonCaption: \"clearButtonCaption\",\n      dropBoxMessage: \"dropBoxMessage\",\n      max: \"max\",\n      preview: \"preview\",\n      withCredentials: \"withCredentials\",\n      uploadedFiles: \"uploadedFiles\",\n      fileTooLargeMessage: \"fileTooLargeMessage\",\n      supportedExtensions: [\"extensions\", \"supportedExtensions\"],\n      headers: \"headers\",\n      maxFileSize: \"maxFileSize\",\n      partName: \"partName\",\n      style: \"style\",\n      url: \"url\"\n    },\n    outputs: {\n      removed: \"removed\",\n      uploadStateChanged: \"uploadStateChanged\",\n      uploadFinished: \"uploadFinished\",\n      previewClicked: \"previewClicked\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 7,\n    vars: 11,\n    consts: [[\"fileDrop\", \"\", 3, \"accept\", \"ngClass\", \"ngStyle\", \"fileOver\", \"fileDrop\"], [1, \"img-ul-file-upload\", \"img-ul-hr-inline-group\"], [\"class\", \"img-ul-upload img-ul-button\", 3, \"ngStyle\", \"ngClass\", 4, \"ngIf\"], [\"class\", \"img-ul-clear img-ul-button\", 3, \"disabled\", \"ngStyle\", \"innerText\", \"click\", 4, \"ngIf\"], [1, \"img-ul-drag-box-msg\", 3, \"innerText\"], [\"class\", \"img-ul-file-too-large\", 3, \"innerText\", 4, \"ngIf\"], [\"class\", \"img-ul-container img-ul-hr-inline-group\", 3, \"ngStyle\", 4, \"ngIf\"], [1, \"img-ul-upload\", \"img-ul-button\", 3, \"ngStyle\", \"ngClass\"], [3, \"innerText\"], [\"type\", \"file\", \"multiple\", \"\", 3, \"disabled\", \"accept\", \"change\"], [\"input\", \"\"], [1, \"img-ul-clear\", \"img-ul-button\", 3, \"disabled\", \"ngStyle\", \"innerText\", \"click\"], [1, \"img-ul-file-too-large\", 3, \"innerText\"], [1, \"img-ul-container\", \"img-ul-hr-inline-group\", 3, \"ngStyle\"], [\"class\", \"img-ul-image\", 3, \"ngStyle\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"img-ul-image\", 3, \"ngStyle\", \"click\"], [\"class\", \"img-ul-loading-overlay\", 4, \"ngIf\"], [\"class\", \"img-ul-x-mark\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [1, \"img-ul-loading-overlay\"], [1, \"img-ul-spinning-circle\"], [1, \"img-ul-x-mark\", 3, \"ngClass\", \"click\"], [1, \"img-ul-close\"]],\n    template: function ImageUploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"fileOver\", function ImageUploadComponent_Template_div_fileOver_0_listener($event) {\n          return ctx.onFileOver($event);\n        })(\"fileDrop\", function ImageUploadComponent_Template_div_fileDrop_0_listener($event) {\n          return ctx.onFileChange($event);\n        });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, ImageUploadComponent_label_2_Template, 4, 7, \"label\", 2);\n        ɵngcc0.ɵɵtemplate(3, ImageUploadComponent_button_3_Template, 1, 3, \"button\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(5, ImageUploadComponent_p_5_Template, 1, 1, \"p\", 5);\n        ɵngcc0.ɵɵtemplate(6, ImageUploadComponent_div_6_Template, 2, 2, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"accept\", ctx.supportedExtensions)(\"ngClass\", ctx.cssClass)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(9, _c3, ctx.fileOver))(\"ngStyle\", ctx.style == null ? null : ctx.style.layout);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.fileCounter != ctx.max);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.fileCounter > 0);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"innerText\", ctx.dropBoxMessage);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFileTooLargeMessage);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.preview);\n      }\n    },\n    directives: [FileDropDirective, ɵngcc2.NgClass, ɵngcc2.NgStyle, ɵngcc2.NgIf, ɵngcc2.NgForOf],\n    styles: [\".img-ul[_ngcontent-%COMP%]{--active-color:#3C9;--common-radius:3px;background-color:#f8f8f8;border-radius:var(--common-radius);border:1px dashed #d0d0d0;font-family:sans-serif;position:relative;color:#9b9b9b}.img-ul-file-is-over[_ngcontent-%COMP%]{border:var(--active-color) solid}.img-ul-hr-inline-group[_ngcontent-%COMP%]:after{clear:both;content:\\\"\\\";display:table}.img-ul-file-upload[_ngcontent-%COMP%]{padding:16px}.img-ul-drag-box-msg[_ngcontent-%COMP%]{display:inline-block;font-weight:600;margin-left:12px;padding-top:14px}label.img-ul-button[_ngcontent-%COMP%]   input[type=file][_ngcontent-%COMP%]{display:none;position:fixed;top:-99999px}.img-ul-clear[_ngcontent-%COMP%]{background-color:red}.img-ul-clear[_ngcontent-%COMP%]:disabled{background-color:#ff6464;cursor:default}.img-ul-upload[_ngcontent-%COMP%]{background-color:var(--active-color)}.img-ul-button[_ngcontent-%COMP%]{-moz-box-shadow:2px 2px 4px 0 rgba(148,148,148,.6);-webkit-box-shadow:2px 2px 4px 0 rgba(148,148,148,.6);border:none;box-shadow:2px 2px 4px 0 rgba(148,148,148,.6);color:#fff;cursor:pointer;display:inline-block;float:left;font-size:1.25em;font-weight:500;padding:10px;text-transform:uppercase}.img-ul-button[_ngcontent-%COMP%]:active   span[_ngcontent-%COMP%]{display:block;position:relative;top:1px}.img-ul-container[_ngcontent-%COMP%]{background-color:#fdfdfd;padding:0 10px}.img-ul-image[_ngcontent-%COMP%]{background:center center/contain no-repeat;display:inline-block;float:left;height:86px;margin:6px;position:relative;width:86px}.img-ul-x-mark[_ngcontent-%COMP%]{background-color:#000;border-radius:2px;color:#fff;cursor:pointer;float:right;height:20px;margin:2px;opacity:.7;text-align:center;width:20px}.img-ul-close[_ngcontent-%COMP%]{height:20px;opacity:.7;padding-right:3px;position:relative;width:20px}.img-ul-x-mark[_ngcontent-%COMP%]:hover   .img-ul-close[_ngcontent-%COMP%]{opacity:1}.img-ul-close[_ngcontent-%COMP%]:after, .img-ul-close[_ngcontent-%COMP%]:before{background-color:#fff;border-radius:2px;content:'';height:15px;position:absolute;top:0;width:2px}.img-ul-close[_ngcontent-%COMP%]:before{-webkit-transform:rotate(45deg);transform:rotate(45deg)}.img-ul-close[_ngcontent-%COMP%]:after{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.img-ul-x-mark.img-ul-disabled[_ngcontent-%COMP%]{display:none}.img-ul-loading-overlay[_ngcontent-%COMP%]{background-color:#000;bottom:0;left:0;opacity:.7;position:absolute;right:0;top:0}.img-ul-spinning-circle[_ngcontent-%COMP%]{height:30px;width:30px;margin:auto;position:absolute;top:0;left:0;bottom:0;right:0;border-radius:50%;border:3px solid rgba(255,255,255,0);border-top:3px solid #fff;border-right:3px solid #fff;-webkit-animation:2s cubic-bezier(.085,.625,.855,.36) infinite spinner;animation:2s cubic-bezier(.085,.625,.855,.36) infinite spinner}.img-ul-file-too-large[_ngcontent-%COMP%]{color:red;padding:0 15px}.img-ul-upload.img-ul-disabled[_ngcontent-%COMP%]{background-color:#86e9c9;cursor:default}.img-ul-upload.img-ul-disabled[_ngcontent-%COMP%]:active   span[_ngcontent-%COMP%]{top:0}@-webkit-keyframes spinner{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}\"]\n  });\n  /** @nocollapse */\n\n  return ImageUploadComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nlet ImageUploadModule = /*#__PURE__*/(() => {\n  class ImageUploadModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n      return {\n        ngModule: ImageUploadModule,\n        providers: [ImageUploadService]\n      };\n    }\n\n  }\n\n  ImageUploadModule.ɵfac = function ImageUploadModule_Factory(t) {\n    return new (t || ImageUploadModule)();\n  };\n\n  ImageUploadModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ImageUploadModule\n  });\n  ImageUploadModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return ImageUploadModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ImageUploadModule, {\n    declarations: function () {\n      return [ImageUploadComponent, FileDropDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [ImageUploadComponent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { ImageUploadModule, ImageUploadComponent, FileHolder, FileDropDirective as ɵb, ImageUploadService as ɵa }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}